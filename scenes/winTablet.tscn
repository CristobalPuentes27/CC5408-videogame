[gd_scene load_steps=15 format=3 uid="uid://bw5sla8nskjlg"]

[ext_resource type="Texture2D" uid="uid://c3gxhfxket2aq" path="res://assets/winCommand/tablet.png" id="1_u5d8t"]

[sub_resource type="GDScript" id="GDScript_4jk3m"]
script/source = "extends Node2D

@onready var animation_tree: AnimationTree = $Sprite2D/AnimationTree

# Called when the node enters the scene tree for the first time.
func _ready() -> void:
	pass # Replace with function body.


# Called every frame. 'delta' is the elapsed time since the previous frame.
func _process(delta: float) -> void:
	pass
"

[sub_resource type="Animation" id="Animation_sxepo"]
length = 0.001
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Sprite2D:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [4]
}

[sub_resource type="Animation" id="Animation_kj8gf"]
resource_name = "idle"
loop_mode = 1
step = 0.25
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Sprite2D:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.25, 0.5, 0.75),
"transitions": PackedFloat32Array(1, 1, 1, 1),
"update": 1,
"values": [4, 5, 6, 7]
}

[sub_resource type="Animation" id="Animation_fqym7"]
resource_name = "win"
step = 0.25
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Sprite2D:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.25, 0.5, 0.75),
"transitions": PackedFloat32Array(1, 1, 1, 1),
"update": 1,
"values": [0, 1, 2, 3]
}

[sub_resource type="AnimationLibrary" id="AnimationLibrary_67rnx"]
_data = {
&"RESET": SubResource("Animation_sxepo"),
&"idle": SubResource("Animation_kj8gf"),
&"win": SubResource("Animation_fqym7")
}

[sub_resource type="AnimationNodeAnimation" id="AnimationNodeAnimation_u5d8t"]
animation = &"idle"

[sub_resource type="AnimationNodeAnimation" id="AnimationNodeAnimation_p1rgg"]
animation = &"idle"

[sub_resource type="AnimationNodeAnimation" id="AnimationNodeAnimation_xy4dl"]
animation = &"win"

[sub_resource type="AnimationNodeStateMachineTransition" id="AnimationNodeStateMachineTransition_h3mk5"]
switch_mode = 2
advance_mode = 2

[sub_resource type="AnimationNodeStateMachineTransition" id="AnimationNodeStateMachineTransition_ghm5v"]
advance_mode = 2

[sub_resource type="AnimationNodeStateMachineTransition" id="AnimationNodeStateMachineTransition_4jk3m"]
switch_mode = 2
advance_mode = 2

[sub_resource type="AnimationNodeStateMachineTransition" id="AnimationNodeStateMachineTransition_kj8gf"]
switch_mode = 2
advance_mode = 2

[sub_resource type="AnimationNodeStateMachine" id="AnimationNodeStateMachine_pl06b"]
states/Start/position = Vector2(194, 92)
states/idle/node = SubResource("AnimationNodeAnimation_p1rgg")
states/idle/position = Vector2(343, 73)
"states/idle 2/node" = SubResource("AnimationNodeAnimation_u5d8t")
"states/idle 2/position" = Vector2(290, 153)
states/win/node = SubResource("AnimationNodeAnimation_xy4dl")
states/win/position = Vector2(522, 86)
transitions = ["Start", "idle", SubResource("AnimationNodeStateMachineTransition_h3mk5"), "idle", "win", SubResource("AnimationNodeStateMachineTransition_ghm5v"), "idle", "idle 2", SubResource("AnimationNodeStateMachineTransition_4jk3m"), "idle 2", "idle", SubResource("AnimationNodeStateMachineTransition_kj8gf")]

[node name="Node2D" type="Node2D"]
script = SubResource("GDScript_4jk3m")

[node name="Sprite2D" type="Sprite2D" parent="."]
texture = ExtResource("1_u5d8t")
hframes = 4
vframes = 2
frame = 4

[node name="AnimationPlayer" type="AnimationPlayer" parent="Sprite2D"]
root_node = NodePath("../..")
libraries = {
&"": SubResource("AnimationLibrary_67rnx")
}

[node name="AnimationTree" type="AnimationTree" parent="Sprite2D"]
root_node = NodePath("../..")
tree_root = SubResource("AnimationNodeStateMachine_pl06b")
anim_player = NodePath("../AnimationPlayer")
